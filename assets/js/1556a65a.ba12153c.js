"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4226],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(t),u=o,d=m["".concat(c,".").concat(u)]||m[u]||f[u]||i;return t?r.createElement(d,a(a({ref:n},p),{},{components:t})):r.createElement(d,a({ref:n},p))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3527:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const i={},a=void 0,s={unversionedId:"Commands/files",id:"Commands/files",title:"files",description:"",source:"@site/docs/Commands/files.md",sourceDirName:"Commands",slug:"/Commands/files",permalink:"/hgcommands/docs/Commands/files",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Commands/files.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"export",permalink:"/hgcommands/docs/Commands/export"},next:{title:"fold",permalink:"/hgcommands/docs/Commands/fold"}},c={},l=[],p={toc:l};function f(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"hg files \\[OPTION\\]... \\[FILE\\]...\n\naliases: fi\n\nlist tracked files\n\n    Print files under Mercurial control in the working directory or specified\n    revision for given files (excluding removed files). Files can be specified\n    as filenames or filesets.\n\n    If no files are given to match, this command prints the names of all files\n    under Mercurial control.\n\n    See 'hg help patterns' and 'hg help filesets' for more information on\n    specifying file patterns.\n\n    Returns 0 if a match is found, 1 otherwise.\n\nOptions (\\[+\\] can be repeated):\n\n-r --rev REV search the repository as it is in REV -0 --print0 end\nfilenames with NUL, for use with xargs -I --include PATTERN \\[+\\]\ninclude names matching the given patterns -X --exclude PATTERN \\[+\\]\nexclude names matching the given patterns\n\n(some details hidden, use --verbose to show complete help)\n")))}f.isMDXComponent=!0}}]);